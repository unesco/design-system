/* === MEDIAQUERIS === */

@mixin mq($type, $value) {
  @media only screen and (#{$type}-width: #{$value}) {
    @content;
  }
}

@mixin max-screen($value) {
  @include mq(max, $value) {
    @content;
  }
}

@mixin min-screen($value) {
  @include mq(min, $value) {
    @content;
  }
}

/* === Icon === */

@mixin icon($icon) {
  content: $icon;
  font-family: 'Material Icons Sharp';
  -webkit-font-feature-settings: 'liga';
  -moz-font-feature-settings: 'liga' 1;
  font-feature-settings: 'liga' 1;
  font-weight: 400;
}

/* === Responsive === */

@mixin responsive($property, $r-map, $r-breakpoints: $r-breakpoints) {
  @each $r-breakpoint, $r-size in $r-map {
    @if $r-breakpoint == null {
      #{$property}: $r-size;
    }
    @else {
      @if map-has-key($r-breakpoints, $r-breakpoint) {
        $r-breakpoint: map-get($r-breakpoints, $r-breakpoint);
      }
      @media screen and (min-width: $r-breakpoint) {
        #{$property}: $r-size;
      }
    }
  }
}
