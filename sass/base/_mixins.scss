/* === MEDIAQUERIS === */

@mixin mq($type, $value) {
  @media only screen and (#{$type}-width: #{$value}) {
    @content;
  }
}

@mixin max-screen($value) {
  @include mq(max, $value) {
    @content;
  }
}

@mixin min-screen($value) {
  @include mq(min, $value) {
    @content;
  }
}

/* === Icon === */

@mixin icon($icon) {
  content: $icon;
  font-family: 'Material Icons Sharp';
  -webkit-font-feature-settings: 'liga';
  -moz-font-feature-settings: 'liga' 1;
  font-feature-settings: 'liga' 1;
  font-weight: 400;
}

/* === Responsive === */

@mixin responsive($property, $r-map, $r-breakpoints: $r-breakpoints) {
  @each $r-breakpoint, $r-size in $r-map {
    @if $r-breakpoint == null {
      #{$property}: $r-size;
    }
    @else {
      @if map-has-key($r-breakpoints, $r-breakpoint) {
        $r-breakpoint: map-get($r-breakpoints, $r-breakpoint);
      }
      @media screen and (min-width: $r-breakpoint) {
        #{$property}: $r-size;
      }
    }
  }
}

/* === Container full === */
@mixin container-fluid {
  width: 100vw;
  left: 50%;
  transform: translateX(-50%);
}

/* === image cover === */
@mixin img-cover {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

// Mixin for full width background
@mixin fullWidthBackground($background, $direction: both) {
  position: relative;
  background: $background;

  @if ($direction=="left") or ($direction=="both") {
    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: 100%;
      width: 9999px;
      height: 100%;
      background: $background;
    }
  }

  @if ($direction=="right") or ($direction=="both") {
    &::after {
      content: "";
      position: absolute;
      top: 0;
      left: 100%;
      width: 9999px;
      height: 100%;
      background: $background;
    }
  }
}

@mixin noneListStyle {
  margin: 0;
  padding: 0;
  list-style: none;
  list-style-image: url("../images/empty.gif"); // IE 11 fix

  li {
    margin: 0;
    padding: 0;
  }
}


@mixin mb-block {
  margin-bottom: 2rem;
  @include min-screen($screen-tablet) {
    margin-bottom: 3rem;
  }
}

@mixin mb-block-big {
  margin-bottom: 2.5rem;
  @include min-screen($screen-tablet) {
    margin-bottom: 3.5rem;
  }
}

@mixin mb-border-block {
  margin-bottom: 1rem;
  border-bottom: .0625rem solid $grey2;
  padding-bottom: 3.5rem;
  @include min-screen($screen-tablet) {
    margin-bottom: 1.5rem;
    padding-bottom: 6rem;
  }
}

@mixin scrollbar-custom {
  &::-webkit-scrollbar-track {
    background-color: $grey1;
    border-radius: 2px;
  }

  &::-webkit-scrollbar {
    width: 4px;
    background-color: $grey1;
    border-radius: 2px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $grey3;
    border-radius: 2px;
  }
}

@mixin descending-z-index($count: 30){
  $target: 0;
  $index: $count;
  @while $index > 0 {
    &:nth-child(#{$target}){ z-index: #{$index}; }
    $target: $target + 1;
    $index: $index - 1;
  }
}
